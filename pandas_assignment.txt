Q1. How do you load a CSV file into a Pandas DataFrame?
Ans:Read CSV Files
Load the CSV into a DataFrame: import pandas as pd. df = pd.read_csv('data.csv') ...
Print the DataFrame without the to_string() method: import pandas as pd. ...
Check the number of maximum returned rows: import pandas as pd. ...
Increase the maximum number of rows to display the entire DataFrame: import pandas as pd.
Q2. How do you check the data type of a column in a Pandas DataFrame?
Ans:To check the data type in pandas DataFrame we can use the “dtype” attribute. The attribute returns a series with the data type of each column. And the column names of the DataFrame are represented as the index of the resultant series object and the corresponding data types are returned as values of the series object
Q3. How do you select rows from a Pandas DataFrame based on a condition?
Ans:Selecting rows based on particular column value using '>', '=', '=', '<=', '!=' operator.
import pandas as pd
  
record = {
  
 'Name': ['Ankit', 'Amit', 'Aishwarya', 'Priyanka', 'Priya', 'Shaurya' ],
 'Age': [21, 19, 20, 18, 17, 21],
 'Stream': ['Math', 'Commerce', 'Science', 'Math', 'Math', 'Science'],
 'Percentage': [88, 92, 95, 70, 65, 78] }
  
# create a dataframe
dataframe = pd.DataFrame(record, columns = ['Name', 'Age', 'Stream', 'Percentage'])
  
print("Given Dataframe :\n", dataframe) 
  
# selecting rows based on condition
rslt_df = dataframe[dataframe['Percentage'] > 80]
  
print('\nResult dataframe :\n', rslt_df)
Q4. How do you rename columns in a Pandas DataFrame?
Ans:One way of renaming the columns in a Pandas Dataframe is by using the rename() function. This method is quite useful when we need to rename some selected columns because we need to specify information only for the columns which are to be renam
import pandas as pd
  
# Define a dictionary containing ICC rankings
rankings = {'test': ['India', 'South Africa', 'England',
                            'New Zealand', 'Australia'],
            'odi': ['England', 'India', 'New Zealand',
                            'South Africa', 'Pakistan'],
            't20': ['Pakistan', 'India', 'Australia',
                            'England', 'New Zealand']}
  
# Convert the dictionary into DataFrame
rankings_pd = pd.DataFrame(rankings)
  
# Before renaming the columns
print(rankings_pd)
  
rankings_pd.rename(columns = {'test':'TEST'}, inplace = True)
  
# After renaming the columns
print("\nAfter modifying first column:\n", rankings_pd.columns)
Q5. How do you drop columns in a Pandas DataFrame?
Ans:The drop() method removes the specified row or column. By specifying the column axis ( axis='columns' ), the drop() method removes the specified column. By specifying the row axis ( axis='index' ), the drop() method removes the specified row.
Q6. How do you find the unique values in a column of a Pandas DataFrame?
Ans:You can get unique values in column (multiple columns) from pandas DataFrame using unique() or Series. unique() functions. unique() from Series is used to get unique values from a single column and the other one is used to get from multiple columns.
Q7. How do you find the number of missing values in each column of a Pandas DataFrame?
Ans:df. isnull(). sum() will give the column-wise sum of missing values.
Q8. How do you fill missing values in a Pandas DataFrame with a specific value?
Ans:The fillna() method replaces the NULL values with a specified value. The fillna() method returns a new DataFrame object unless the inplace parameter is set to True , in that case the fillna() method does the replacing in the original DataFrame instead.
Q9. How do you concatenate two Pandas DataFrames?
Ans:To concatenate an arbitrary number of pandas objects ( DataFrame or Series ), use concat .
Q10. How do you merge two Pandas DataFrames on a specific column?
Ans:Key Points
You can join pandas Dataframes in much the same way as you join tables in SQL.
The concat() function can be used to concatenate two Dataframes by adding the rows of one to the other.
concat() can also combine Dataframes by columns but the merge() function is the preferred way.
Q11. How do you group data in a Pandas DataFrame by a specific column and apply an aggregation function?
Ans:In Pandas, we can also apply different aggregation functions across different columns. For that, we need to pass a dictionary with key containing the column names and values containing the list of aggregation functions for any specific column.
Q12. How do you pivot a Pandas DataFrame?
Ans:The pivot() function is used to reshaped a given DataFrame organized by given index / column values. This function does not support data aggregation, multiple values will result in a MultiIndex in the columns. Column to use to make new frame's index. If None, uses existing index
Q13. How do you change the data type of a column in a Pandas DataFrame?
Ans:Change column type in pandas using dictionary and DataFrame.astype()
# importing pandas as pd
import pandas as pd

# sample dataframe
df = pd.DataFrame({
	'A': [1, 2, 3, 4, 5],
	'B': ['a', 'b', 'c', 'd', 'e'],
	'C': [1.1, '1.0', '1.3', 2, 5]})

# using dictionary to convert specific columns
convert_dict = {'A': int,
				'C': float
				}

df = df.astype(convert_dict)
print(df.dtypes)

Q14. How do you sort a Pandas DataFrame by a specific column?
Ans:To sort the DataFrame based on the values in a single column, you'll use . sort_values() . By default, this will return a new DataFrame sorted in ascending order. It does not modify the original DataFrame.
Q15. How do you create a copy of a Pandas DataFrame?
Ans:The copy() method returns a copy of the DataFrame. By default, the copy is a "deep copy" meaning that any changes made in the original DataFrame will NOT be reflected in the copy.

Q16. How do you filter rows of a Pandas DataFrame by multiple conditions?
Ans:using loc and query function we can filter rows on multiple columns.
Q17. How do you calculate the mean of a column in a Pandas DataFrame?
Ans:To get column average or mean from pandas DataFrame use either mean() and describe() method. The DataFrame. mean() method is used to return the mean of the values for the requested axis.
Q18. How do you calculate the standard deviation of a column in a Pandas DataFrame?
Ans:Standard deviation is calculated using the function . std() . However, the Pandas library creates the Dataframe object and then the function . std() is applied on that Dataframe .
Q19. How do you calculate the correlation between two columns in a Pandas DataFrame?
Ans:By using corr() function we can get the correlation between two columns in the dataframe.
Q20. How do you select specific columns in a DataFrame using their labels?
Ans:This is the most basic way to select a single column from a dataframe, just put the string name of the column in brackets. Returns a pandas series. Passing a list in the brackets lets you select multiple columns at the same time
Q21. How do you select specific rows in a DataFrame using their indexes?
Ans:If you'd like to select rows based on integer indexing, you can use the . iloc function. If you'd like to select rows based on label indexing, you can use the . loc function.
Q22. How do you sort a DataFrame by a specific column?
Ans:To sort the DataFrame based on the values in a single column, you'll use . sort_values() . By default, this will return a new DataFrame sorted in ascending order. It does not modify the original DataFrame.
Q23. How do you create a new column in a DataFrame based on the values of another column?
Ans:You can add/append a new column to the DataFrame based on the values of another column using df. assign() , df. apply() , and, np. where() functions and return a new Dataframe after adding a new column.
Q24. How do you remove duplicates from a DataFrame?
Ans:The drop_duplicates() method removes duplicate rows. Use the subset parameter if only some specified columns should be considered when looking for duplicates.
Q25. What is the difference between .loc and .iloc in Pandas?
Ans:The main difference between pandas loc[] vs iloc[] is loc gets DataFrame rows & columns by labels/names and iloc[] gets by integer Index/position.